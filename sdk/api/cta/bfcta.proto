syntax = "proto3";

// option optimize_for = CODE_SIZE;
option cc_enable_arenas = true;

package bftrader.bfcta;

import "bftrader.proto";

//============================

// Bar周期类型
enum BfPeriod{
    PERIOD_UNKNOWN = 0;         // 未知
    PERIOD_S1 = 1;              // 1秒
    PERIOD_S3 = 2;              // 3秒
    PERIOD_S5 = 3;              // 5秒
    PERIOD_S15 = 4;             // 15秒
    PERIOD_S30 = 5;             // 30秒
    PERIOD_M1 = 6;              // 1分钟
    PERIOD_M3 = 7;              // 3分钟
    PERIOD_M5 = 8;              // 5分钟
    PERIOD_M15 = 9;             // 15分钟
    PERIOD_M30 = 10;            // 30分钟
    PERIOD_H1 = 11;             // 1小时
    PERIOD_H2 = 12;             // 2小时
    PERIOD_H4 = 13;             // 4小时
    PERIOD_D1 = 14;             // 1天
    PERIOD_W1 = 15;             // 1周
}

//============================

// Bar行情数据类
message BfBarData{

    // 代码相关
    string symbol = 1;          // 合约代码
    string exchange = 2;        // 交易所代码

    // 周期   
    BfPeriod period = 3;       
    
    // 成交数据
    string date = 4;            // 日期 20151009
    string time = 5;            // 时间 11:20:56
    int32 volume = 6;           // 今天总成交量
    double openInterest = 7;    // 持仓量
    int32 lastVolume = 8;       // 本bar成交量，本笔增减
    
    // OHLC
    double openPrice = 9;       // 开盘价
    double highPrice = 10;      // 最高价
    double lowPrice = 11;       // 最低价
    double closePrice = 12;     // 收盘价 
}

// 获取历史Tick数据的对象类（1分钟整存整取）
message BfGetTickReq{
    // 代码编号相关
    string symbol = 1;              // 合约代码
    string exchange = 2;            // 交易所代码

    string toDate = 3;              // 截止日期
    string toTime = 4;              // 截止时间
    int32 count = 5;                // 获取条数
}

// 获取历史Bar数据的对象类
message BfGetBarReq{
    // 代码编号相关
    string symbol = 1;              // 合约代码
    string exchange = 2;            // 交易所代码

    BfPeriod period = 3;            // 周期
    string toDate = 4;              // 截止日期
    string toTime = 5;              // 截止时间
    int32 count = 6;                // 获取条数
}

//============================

// K/V数据交换传入传出的数据类
// 策略间交换数据服务
// 由于涉及交易，交易又分实盘和回测，所以放到网关比较合适
message BfKvData{

    //kv对
    string key = 1;
    string value = 2;
}

//============================
