syntax = "proto3";

// option optimize_for = CODE_SIZE;
option cc_enable_arenas = true;

package bftrader.bfproxy;

import "bftrader.proto";

//
// 机器人服务，实现进程外策略
// 策略底层由一个robot来驱动，采用单线程实现
// robot负责和cta/gateway和datafeed通信
//
service BfRobotService{
    // 交易所开机/连通通知，这里可以做订阅处理
    rpc OnExchangeOpened(BfVoid) returns (BfVoid) {}

    // 行情回报
    rpc OnTick(BfTickData) returns (BfVoid) {}
    
    // 命令/回报错误
    rpc OnError(BfErrorData) returns (BfVoid) {}
    
    // 成交回报
    rpc OnTrade(BfTradeData) returns (BfVoid) {}
    
    // 委托回报
    rpc OnOrder(BfOrderData) returns (BfVoid) {}
        
    // 持仓回报
    rpc OnPosition(BfPositionData) returns (BfVoid) {}
    
    // 账号信息回报
    rpc OnAccount(BfAccountData) returns (BfVoid) {}
        
    // 交易所关机/断开通知，这里可以做收盘处理
    rpc OnExchangeClosed(BfVoid) returns (BfVoid) {}
}
